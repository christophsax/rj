% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/issue.R
\name{get_startpg_from_nonart_tex}
\alias{get_startpg_from_nonart_tex}
\title{#' Publish an issue
#'
#' Generates per-article PDFs and copies them to the website, located
#' at \code{web_path}. Removes the published articles from the
#' accepted directory. Generates the necessary metadata and updates
#' the website configuration.
#'
#' This depends on the pdftools CRAN package, which in turn depends on
#' the poppler system library. It also requires the command line
#' program pdftk (distributed as PDFtk Server).
#'
#' @param id the id of the issue
#' @param web_path path to the rjournal.github.io checkout
#' @param post_file XXX
#' @export
publish_issue <- function(id,
                          web_path = file.path("..", "rjournal.github.io"),
                          post_file = c("foundation" = 1, "cran" = 1, "bioc" = 1, "ch" = 1)) {
  if (!file.exists(web_path)) {
    stop("web_path '", web_path, "' does not exist, please specify")
  }
  md <- issue_lp_metadata(id, post_file = post_file)
  archive_path <- init_archive_path(id, web_path)
  write_article_pdfs(id, archive_path, md$articles)
  cleanup_accepted(id, web_path)
  write_issue_metadata(web_path, md)
  update_layout(id, web_path)
}}
\usage{
get_startpg_from_nonart_tex(dir, file)
}
\description{
#' Publish an issue
#'
#' Generates per-article PDFs and copies them to the website, located
#' at \code{web_path}. Removes the published articles from the
#' accepted directory. Generates the necessary metadata and updates
#' the website configuration.
#'
#' This depends on the pdftools CRAN package, which in turn depends on
#' the poppler system library. It also requires the command line
#' program pdftk (distributed as PDFtk Server).
#'
#' @param id the id of the issue
#' @param web_path path to the rjournal.github.io checkout
#' @param post_file XXX
#' @export
publish_issue <- function(id,
                          web_path = file.path("..", "rjournal.github.io"),
                          post_file = c("foundation" = 1, "cran" = 1, "bioc" = 1, "ch" = 1)) {
  if (!file.exists(web_path)) {
    stop("web_path '", web_path, "' does not exist, please specify")
  }
  md <- issue_lp_metadata(id, post_file = post_file)
  archive_path <- init_archive_path(id, web_path)
  write_article_pdfs(id, archive_path, md$articles)
  cleanup_accepted(id, web_path)
  write_issue_metadata(web_path, md)
  update_layout(id, web_path)
}
}
